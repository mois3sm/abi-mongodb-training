# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
#trigger:
#  - master
branches:
  include:
    - master
    - releases/*
  exclude:
    - releases/old*
variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '16b5820b-2f28-4f9e-89ec-7c63a87b5c52'
  # Web app name
  webAppName: 'abi-mongodb-training-app'
  # Environment name
  environmentName: 'test'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'
stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: MavenPackageAndPublishArtifacts
        displayName: Maven Package and Publish Artifacts
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Maven@3
            displayName: 'Maven Package'
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              goals: 'package'
          - task: CopyFiles@2
            displayName: 'Copy Files to artifact staging directory'
            inputs:
              SourceFolder: '$(System.DefaultWorkingDirectory)'
              Contents: '**/target/*.?(war|jar)'
              TargetFolder: $(Build.ArtifactStagingDirectory)
          - upload: $(Build.ArtifactStagingDirectory)
            artifact: drop
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployLinuxWebApp
        displayName: Deploy Linux Web App
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Azure Web App Deploy: '
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(webAppName)
                    package: '$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)'